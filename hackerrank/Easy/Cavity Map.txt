# Cavity Map

#!/bin/python3

import math
import os
import random
import re
import sys

#
# Complete the 'cavityMap' function below.
#
# The function is expected to return a STRING_ARRAY.
# The function accepts STRING_ARRAY grid as parameter.
#

def cavityMap(grid):
    # Write your code here
    
    for i in range(1, n-1):
        for ii in range(1, n-1):
            
            if grid[i][ii-1] == "X" or grid[i-1][ii] == "X":
                continue
            
            last = int(grid[i][ii-1])
            following = int(grid[i][ii+1])
            current = int(grid[i][ii])
            top = int(grid[i-1][ii])
            bottom = int(grid[i+1][ii])
            
            
            print(f"last:{last}, current:{current}, following:{following}")
                
            if current > last and current > following and current > top and current > bottom:
                grid[i] = grid[i][:ii] + "X" + grid[i][ii+1:]
            
    return grid
    
    
if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    n = int(input().strip())

    grid = []

    for _ in range(n):
        grid_item = input()
        grid.append(grid_item)

    result = cavityMap(grid)

    fptr.write('\n'.join(result))
    fptr.write('\n')

    fptr.close()
