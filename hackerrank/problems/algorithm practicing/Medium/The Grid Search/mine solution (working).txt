# https://www.hackerrank.com/challenges/the-grid-search/problem

#!/bin/python3

import math
import os
import random
import re
import sys

#
# Complete the 'gridSearch' function below.
#
# The function is expected to return a STRING.
# The function accepts following parameters:
#  1. STRING_ARRAY G
#  2. STRING_ARRAY P
#

def gridSearch(G, P):
    # Write your code here
    
    
    # another bad solution with a minor mistake
    
    # # iterate over grid cols with index less than the length of the pattern
    # for j in range(C-c):
    #     # iterate over grid rows
    #     for i in range(R):
    #         # iterate over pattern rows
            
    #         for n in range(r):
                
    #             passed = True

    #             print(G[i])
    #             # print(P[n])

    #             if G[i][j:j+c] != P[n]:
    #                 passed = False
    #                 break
                
    #             # print(G[i][j:j+c], P[n])
                
    #             i += 1
                
    #         if passed:
    #             return "YES"
            
    # return "NO"

    # iterate over grid cols with index less than the length of the pattern
    for j in range(C-c+1):
        # iterate over grid rows =|=
        for i in range(R-r+1):
            # iterate over pattern rows
            for n in range(r):
                
                passed = True

                if G[i+n][j:j+c] != P[n]:
                    passed = False
                    break
                      
            if passed:
                return "YES"
            
    return "NO"


    

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    t = int(input().strip())

    for t_itr in range(t):
        first_multiple_input = input().rstrip().split()

        R = int(first_multiple_input[0])

        C = int(first_multiple_input[1])

        G = []

        for _ in range(R):
            G_item = input()
            G.append(G_item)

        second_multiple_input = input().rstrip().split()

        r = int(second_multiple_input[0])

        c = int(second_multiple_input[1])

        P = []

        for _ in range(r):
            P_item = input()
            P.append(P_item)

        result = gridSearch(G, P)

        fptr.write(result + '\n')

    fptr.close()
